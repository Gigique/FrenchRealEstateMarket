import streamlit as st
import pandas as pd
import numpy as np

#importer le df dans un cache √† court terme (et √©viter de l'importer √† chaque fois)
@st.cache_data
def get_data():
    # Chemin vers le cvs
    df = pd.read_csv("clean_df_analysis.csv", low_memory=False)
    return df

df = get_data()

def description():

    st.markdown("<h1 style='color: orange;'>üîç Description du jeu de donn√©es</h1>", unsafe_allow_html=True)

    # Texte descriptif
    st.write("Cet ensemble de donn√©es contient des informations sur les valeurs fonci√®res g√©olocalis√©es du 01/01/2024 au 30/06/2024, avec des colonnes d√©taillant les transactions immobili√®res : identifiants de mutation, dates, valeurs fonci√®res, adresses compl√®tes (num√©ro, voie, code postal, commune), types de biens (surface, nombre de pi√®ces), et localisation (latitude, longitude). Ces donn√©es permettent d'analyser les tendances fonci√®res et immobili√®res sur le territoire fran√ßais. Les donn√©es sont disponibles sur : https://www.data.gouv.fr/fr/datasets/demandes-de-valeurs-foncieres-geolocalisees/.")

    #Nombre d'observation et nombre de variables
    st.write(f"Ce data frame comporte {df.shape[0]} observations et {df.shape[1]} colonnes qui sont les variables pr√©sent√©es ci-dessous")

    #Tableau markdown donnant le type et la description des variables 

    st.markdown("<h2 style='color: red;'>Aper√ßu des donn√©es</h2>", unsafe_allow_html=True)
    
    st.markdown("""
| Nom de la variable                 | Type         | Description                                                                                  |
|------------------------------------|--------------|----------------------------------------------------------------------------------------------|
| id_mutation                        | object       | Identifiant de mutation (non stable, sert √† grouper les lignes)                              |
| date_mutation                      | object       | Date de la mutation au format ISO-8601 (YYYY-MM-DD)                                          |
| nature_mutation                    | object       | Nature de la mutation                                                                         |
| valeur_fonciere                    | float64      | Valeur fonci√®re (s√©parateur d√©cimal = point): chaque id_mutation correspond √† une seule et unique valeur de valeur_fonciere |
| code_postal                        | float64      | Code postal (5 caract√®res)                                                                   |
| code_commune                       | object       | Code commune INSEE (5 caract√®res)                                                            |
| nom_commune                        | object       | Nom de la commune (accentu√©)                                                                  |
| code_departement                   | object       | Code d√©partement INSEE (2 ou 3 caract√®res)                                                    |
| id_parcelle                        | object       | Identifiant de parcelle (14 caract√®res)                                                      |
| numero_volume                      | object       | Num√©ro de volume                                                                              |
| nombre_lots                        | int64        | Nombre de lots                                                                                |
| type_local                         | object       | Libell√© du type de local                                                                      |
| surface_reelle_bati                | float64      | Surface r√©elle du b√¢ti                                                                        |
| nombre_pieces_principales          | float64      | Nombre de pi√®ces principales                                                                  |
| surface_terrain                    | float64      | Surface du terrain                                                                            |
| longitude                          | float64      | Longitude du centre de la parcelle concern√©e (WGS-84)                                         |
| latitude                           | float64      | Latitude du centre de la parcelle concern√©e (WGS-84)                                          |
| nom_departement                    | object       | Nom du d√©partement                                                                            |
| nom_region                         | object       | Nom de la r√©gion                                                                              |
| dans_diag_vide                     | bool         | Variable indiquant si la localit√© est dans la diagonale du vide ou pas                        |
| Sisimicite                         | object       | Variable indiquant le risque de sismicit√© de la localit√©                                      |
| nature_risque                      | object       | Variable indiquant la nature du risque innodable                                          |                
| in_zone_inondable                  | bool         | Variable indiquant si la localit√© est situ√© dans une zone inondable ou pas                                          |
| total_surface_reelle_batie         | float64      | Superficie r√©elle b√¢tie totale                                          |
| total_superficie_terrain           | float64      | Superficie terrain totale                                          |
| prix_m¬≤                            | float64      | Prix/m¬≤                                       |

    """)

    # Donn√©e manquantes
    #Calcul du % de valeurs manquantes par colonne
    missing_data = np.round((df.isnull().sum() / len(df)) * 100,2)

    # Convertir en DataFrame 
    missing_data_df = missing_data.reset_index()
    missing_data_df.columns = ['Colonne', 'Valeurs manquantes (%)']  

    # Afficher avec st.dataframe
    st.subheader(":red[Pourcentage de donn√©es manquantes par variable:]")
    st.dataframe(missing_data_df) 
